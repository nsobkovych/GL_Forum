{"_id":{"$oid":"59b582cdee4fc013385ee1f2"},"updatedAt":{"$date":"2017-09-10T18:22:05.082Z"},"createdAt":{"$date":"2017-09-10T18:22:05.082Z"},"author":{"$oid":"59b580c1ee4fc013385ee1f0"},"responseText":"You can use basic HTML5 video tag.\nThat's all you need to embed a simple video on your page and show the basic controls so that a user can play, pause or otherwise control the video. \nYou can specify multiple source files by using the source element. The source element lets you specify multiple formats as a fallback in case the user's browser doesn't support one of them.","thread":{"$oid":"59b57fadee4fc013385ee1ef"},"isUseful":false,"rating":0,"dislikes":[],"likes":[],"__v":0}
{"_id":{"$oid":"59b587d6ee4fc013385ee1f6"},"updatedAt":{"$date":"2017-09-10T19:51:15.472Z"},"createdAt":{"$date":"2017-09-10T18:43:34.430Z"},"author":{"$oid":"59b586a6ee4fc013385ee1f4"},"responseText":"Screen readers and other tools rely on the base HTML document that you send along. As such, making things unselectable should not have an effect, just as other styling effects wouldn't matter.\n\u003cbr\u003e\nJAWS and other screen readers work by skimming HTML documents and creating something like a DOM model for the user to move through. Using them on the internet requires that one know a bit about headings and paragraph tags, so a user will already understand the way websites are supposed to be written. Often, a sightless user will skim through the headings, much like how a sighted person would skim through a Wikipedia article, stopping when they find the section they want, and ordering the screen reader to read the next paragraph below. For this reason, it's important to lay out your HTML correctly, so that a screen reader can read it top to bottom.","thread":{"$oid":"59b585c4ee4fc013385ee1f3"},"isUseful":true,"rating":1,"dislikes":[],"likes":[{"$oid":"59b58969ee4fc013385ee1f8"}],"__v":1}
{"_id":{"$oid":"59b58aa2ee4fc013385ee1fa"},"updatedAt":{"$date":"2017-09-10T18:55:30.619Z"},"createdAt":{"$date":"2017-09-10T18:55:30.619Z"},"author":{"$oid":"59b58969ee4fc013385ee1f8"},"responseText":"\u003cblockquote\u003eNote: I'm not asking for opinion on the usage of user-select attributes, I'm looking for facts on levels of accessibility being affected by it.\u003c/blockquote\u003e\n(It might have several drawbacks for usability, but as you explicitly ask about accessibility, I’m ignoring these here.)\n\u003cbr\u003e\nTwo possible accessibility implications (and there are likely way more, as there are numerous disabilities, and even more aids, up to unique solutions):\n\u003cul\u003e\n\u003cli\u003eSome people with an intellectual/learning disability might have problems understanding the meaning of certain words. By not allowing copy-paste, you force them to manually type the words if they want to look them up somewhere (which is just a usability problem), but not all people might be able to do so (where it becomes an accessibility problem).\u003c/li\u003e\n\u003cli\u003eIt’s also conceivable that some people use a text-to-speech tool (not a screen reader) that reads the selected text on command, because they have problems to (or can’t) read.\u003c/li\u003e\n\u003c/ul\u003e","thread":{"$oid":"59b585c4ee4fc013385ee1f3"},"isUseful":false,"rating":0,"dislikes":[],"likes":[],"__v":0}
{"_id":{"$oid":"59b58c5fee4fc013385ee1fd"},"updatedAt":{"$date":"2017-09-10T19:56:12.741Z"},"createdAt":{"$date":"2017-09-10T19:02:55.017Z"},"author":{"$oid":"59b58b42ee4fc013385ee1fb"},"responseText":"\u003cstrong\u003eThe short answer:\u003c/strong\u003e\n\u003cp\u003eSVG would be easier for you, since selection and moving it around is already built in. SVG objects are DOM objects, so they have \"click\" handlers, etc.\u003c/p\u003e\n\u003cp\u003eDIVs are okay but clunky and have awful performance loading at large numbers.\u003c/p\u003e\n\u003cp\u003eCanvas has the best performance hands-down, but you have to implement all concepts of managed state (object selection, etc) yourself, or use a library.\u003c/p\u003e","thread":{"$oid":"59b588deee4fc013385ee1f7"},"isUseful":true,"rating":1,"dislikes":[],"likes":[{"$oid":"59b58da7ee4fc013385ee1ff"}],"__v":1}
{"_id":{"$oid":"59b58f16ee4fc013385ee201"},"updatedAt":{"$date":"2017-09-10T19:14:30.992Z"},"createdAt":{"$date":"2017-09-10T19:14:30.992Z"},"author":{"$oid":"59b58da7ee4fc013385ee1ff"},"responseText":"\u003cblockquote\u003eBelow the nav tag, I need to place a carousel with images that shows some of the accomplishments of the company.What semantic tag should I use, section, article or a div? Should I use figure for every image in the carousel?\u003c/blockquote\u003e\nIt doesn't matter too much which semantic tag you use. I would wrap the Carousel in a section tag. I would use figure for each image. Then you can also use figcaption if you need one.\n\u003cblockquote\u003eBelow the carousel, they are 3 more images with logos of the partners of the company. This part has a title.Below them, I have 3 images horizontally positioned, that shows the services that the company offers. This part has a title too.What semantic tag should I use for the image parts, and should I use figure for every image?\u003c/blockquote\u003e\nAs for the images below the carousel i would use a section tag again and inside this section i would have 3 article tags with the image inside each one. In the css give each one a width: 33% and a diaplay: inline; and float: left.\n\u003cbr\u003e\nFor the header text put it before the first article and text-align: center.","thread":{"$oid":"59b58d4dee4fc013385ee1fe"},"isUseful":false,"rating":0,"dislikes":[],"likes":[],"__v":0}
{"_id":{"$oid":"59b58f6bee4fc013385ee202"},"updatedAt":{"$date":"2017-09-10T19:15:55.727Z"},"createdAt":{"$date":"2017-09-10T19:15:55.727Z"},"author":{"$oid":"59b58da7ee4fc013385ee1ff"},"responseText":"SVG is probably better for applications and apps with few items (less than 1000? Depends really)\n\u003cbr\u003e\u003cbr\u003e\nCanvas is better for thousands of objects and careful manipulation, but a lot more code (or a library) is needed to get it off the ground.\n\u003cbr\u003e\u003cbr\u003e\nHTML Divs are clunky and do not scale, making a circle is only possible with rounded corners, making complex shapes is possible but involves hundreds of tiny tiny pixel-wide divs. Madness ensues.","thread":{"$oid":"59b588deee4fc013385ee1f7"},"isUseful":false,"rating":0,"dislikes":[],"likes":[],"__v":0}
{"_id":{"$oid":"59b59147ee4fc013385ee204"},"updatedAt":{"$date":"2017-09-10T19:53:56.812Z"},"createdAt":{"$date":"2017-09-10T19:23:51.208Z"},"author":{"$oid":"59b58969ee4fc013385ee1f8"},"responseText":"Meta tags helps your website getting found by search engines like Google, Bing etc. When you use it the right way in combination with some landing page you can get found in the best way. Another method is the use of link-exchange. If you use the 3 methods it could get your websites way better indexed by google then if you only use the meta-tags.\n\u003cbr\u003e\u003cbr\u003e\nIf you want to know more about it, just search on google with keywords: landing page, indexed by google, meta-tags, link-exchange etc.","thread":{"$oid":"59b590efee4fc013385ee203"},"isUseful":true,"rating":2,"dislikes":[],"likes":[{"$oid":"59b58b42ee4fc013385ee1fb"},{"$oid":"59b58da7ee4fc013385ee1ff"}],"__v":2}
{"_id":{"$oid":"59b592e4ee4fc013385ee206"},"updatedAt":{"$date":"2017-09-10T19:30:44.499Z"},"createdAt":{"$date":"2017-09-10T19:30:44.499Z"},"author":{"$oid":"59b58b42ee4fc013385ee1fb"},"responseText":"Meta tags describe your page. Search engines have famously used them to help index your pages. Its got nothing to do with asp.net but rather the HTML output that is produced. Be aware although that search engines rely less on them as they do now and incorporate other factors into their indexing.","thread":{"$oid":"59b590efee4fc013385ee203"},"isUseful":false,"rating":0,"dislikes":[],"likes":[],"__v":0}
{"_id":{"$oid":"59b59477ee4fc013385ee208"},"updatedAt":{"$date":"2017-09-10T19:37:27.383Z"},"createdAt":{"$date":"2017-09-10T19:37:27.383Z"},"author":{"$oid":"59b58b42ee4fc013385ee1fb"},"responseText":"\u003cblockquote\u003eI am implementing Prototypal inheritence in java script using simple assigning of prototype. But at the place of Square.prototype = Rectangle.prototype it is recommended to use Square.prototype = Object.create(Rectangle.prototype). Can anyone tell me the underlying difference because the above code is working fine.\u003c/blockquote\u003e\nBecause the statement Square.prototype = Rectangle.prototype; actually copies the reference of the Rectangle.prototype and assigns it to Square.prototype. (Primitive types are copied by value and reference types are copied by reference).\n\u003cbr\u003e\u003cbr\u003e\nSo, if you are going to add some properties and methods on Square.prototype it'll modify the original Rectangle.prototype object and which is not what you want.\n\u003cbr\u003e\u003cbr\u003e\nThe Square.prototype = Object.create(Rectangle.prototype) creates a new object whose prototype is the Rectangle.prototype which is correct way.","thread":{"$oid":"59b59247ee4fc013385ee205"},"isUseful":false,"rating":0,"dislikes":[],"likes":[],"__v":0}
{"_id":{"$oid":"59b59547ee4fc013385ee209"},"updatedAt":{"$date":"2017-09-10T19:52:16.727Z"},"createdAt":{"$date":"2017-09-10T19:40:55.489Z"},"author":{"$oid":"59b57aceee4fc013385ee1e8"},"responseText":"I'm not sure why you would use flex: none and flex-grow: 1 in the same declaration.\n\u003cbr\u003e\u003cbr\u003e\nflex: none breaks down to this:\n\u003cbr\u003e\u003cbr\u003e\nflex-grow: 0\nflex-shrink: 0\nflex-basis: auto\nThen you're overriding the flex-grow above with flex-grow: 1\n\u003cbr\u003e\u003cbr\u003e\nYou should just consolidate both rules. That would look like this: flex: 1 0 auto","thread":{"$oid":"59b59416ee4fc013385ee207"},"isUseful":true,"rating":0,"dislikes":[],"likes":[],"__v":0}
{"_id":{"$oid":"59b59798ee4fc013385ee20b"},"updatedAt":{"$date":"2017-09-10T19:50:48.927Z"},"createdAt":{"$date":"2017-09-10T19:50:48.927Z"},"author":{"$oid":"59b580c1ee4fc013385ee1f0"},"responseText":"\u003cblockquote\u003eI came across an interesting situation with java-script closure and arrays. I am not sure which part of the javascript is causing the caching of the arguments array.\nI would like to understand, which property of java script is the reason behind this happening?\u003c/blockquote\u003e\nThe foo function only accepts three arguments,\n\u003cbr\u003e\u003cbr\u003e\nfunction foo(param1, param2, param3) {\nand it's only ever being sent three\n\u003cbr\u003e\u003cbr\u003e\nmethod(args[0], args[1], args[2]);\nyet, push() pushes to the array, so when you have [1,2,3,4] only the three first are sent, not the fourth.\n\u003cbr\u003e\u003cbr\u003e\nHad the function accepted four arguments\nIn other words, this has nothing to do with caching, or the values not being added, it's just the function that doesn't accept enough arguments as new values are pushed to the array.\n\u003cbr\u003e\u003cbr\u003e\nThe better approach would be functions that accepts any number of arguments","thread":{"$oid":"59b596d9ee4fc013385ee20a"},"isUseful":false,"rating":0,"dislikes":[],"likes":[],"__v":0}
